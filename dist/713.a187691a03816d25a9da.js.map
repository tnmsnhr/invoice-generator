{"version":3,"file":"713.a187691a03816d25a9da.js","mappings":"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","sources":["webpack://invoicefy/./src/UIComponents/Address/Address.tsx","webpack://invoicefy/./src/UIComponents/Address/index.ts","webpack://invoicefy/./src/UIComponents/Text/Text.tsx","webpack://invoicefy/./src/UIComponents/Text/index.ts","webpack://invoicefy/./src/pages/Customers/Customers.tsx","webpack://invoicefy/./src/pages/Customers/index.ts","webpack://invoicefy/./src/pages/Customers/customers.module.css?fbc1","webpack://invoicefy/./src/services/customerSerives.ts","webpack://invoicefy/./src/services/firebase.ts","webpack://invoicefy/./src/store/actions/customerAction.ts"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Text from \"UIComponents/Text\";\nimport * as styles from \"./address.module.css\";\nimport { TextType } from \"UIComponents/Text/Text\";\nconst Address = ({ style, data, className }) => {\n    return (_jsxs(\"div\", Object.assign({ style: Object.assign({}, style), className: `${styles.address} ${className || ''}` }, { children: [_jsx(Text, Object.assign({ type: TextType.Title1, style: { marginBottom: \"0.2rem\" } }, { children: data === null || data === void 0 ? void 0 : data.name })), _jsx(Text, Object.assign({ type: TextType.Body1, style: { marginBottom: \"1.5rem\" } }, { children: data === null || data === void 0 ? void 0 : data.email })), _jsx(Text, Object.assign({ type: TextType.Body1, style: { margin: \"0.3rem 0\" } }, { children: data === null || data === void 0 ? void 0 : data.address })), _jsx(Text, Object.assign({ type: TextType.Body1 }, { children: data === null || data === void 0 ? void 0 : data.phoneNumber }))] })));\n};\nexport default Address;\n","import Address from \"./Address\";\nexport default Address;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport \"./text.css\";\nexport var TextType;\n(function (TextType) {\n    TextType[\"Title1\"] = \"title1\";\n    TextType[\"Title2\"] = \"title2\";\n    TextType[\"Title3\"] = \"title3\";\n    TextType[\"Body1\"] = \"body1\";\n    TextType[\"Body2\"] = \"body2\";\n    TextType[\"Button1\"] = \"button1\";\n    TextType[\"Button2\"] = \"button2\";\n    TextType[\"Subtitle\"] = \"subtitle\";\n    TextType[\"SubtitleBold\"] = \"subtitleBold\";\n    TextType[\"Caption\"] = \"caption\";\n    TextType[\"CaptionBold\"] = \"captionBold\";\n})(TextType || (TextType = {}));\nexport var TextColor;\n(function (TextColor) {\n    TextColor[\"Primary\"] = \"black\";\n    TextColor[\"Grey\"] = \"darkGrey\";\n    TextColor[\"Secondary\"] = \"secondary\";\n    TextColor[\"Inactive\"] = \"inactive\";\n    TextColor[\"Inverse\"] = \"inverse\";\n    TextColor[\"Info\"] = \"info\";\n    TextColor[\"Error\"] = \"error\";\n    TextColor[\"Warning\"] = \"warning\";\n})(TextColor || (TextColor = {}));\nconst Text = ({ type, color = TextColor.Primary, children, style, className }) => {\n    const tagMap = {\n        [TextType.Title1]: 'h1',\n        [TextType.Title2]: 'h2',\n        [TextType.Title3]: 'h3',\n        [TextType.Body1]: 'p',\n        [TextType.Body2]: 'p',\n        [TextType.Button1]: 'p',\n        [TextType.Button2]: 'p',\n        [TextType.Subtitle]: 'h4',\n        [TextType.SubtitleBold]: 'h4',\n        [TextType.Caption]: 'p',\n        [TextType.CaptionBold]: 'p',\n    };\n    const colorMap = {\n        [TextColor.Primary]: 'var(--black)',\n        [TextColor.Grey]: 'var(--grey-dark)',\n        [TextColor.Secondary]: 'var(--grey-dark)',\n        [TextColor.Inactive]: 'var(--inactive)',\n        [TextColor.Inverse]: 'var(--inverse)',\n        [TextColor.Info]: 'var(--info)',\n        [TextColor.Error]: 'var(--error)',\n        [TextColor.Warning]: 'var(--warning)',\n    };\n    const Tag = tagMap[type];\n    const resolvedColor = colorMap[color];\n    return (_jsx(Tag, Object.assign({ className: `text ${type} ${className}`, style: Object.assign({ color: resolvedColor }, style) }, { children: children })));\n};\nexport default Text;\n","import Text from \"./Text\";\nexport default Text;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport Address from 'UIComponents/Address';\nimport Spinner from 'UIComponents/Spinner';\nimport Text from 'UIComponents/Text';\nimport * as styles from \"./customers.module.css\";\nimport { TextType } from 'UIComponents/Text/Text';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCustomers } from 'store/actions/customerAction';\nconst Customers = ({ customers, isLoading, onFetchCustomers }) => {\n    useEffect(() => {\n        if (onFetchCustomers) {\n            onFetchCustomers();\n        }\n    }, []);\n    return (_jsx(\"div\", { children: _jsxs(\"div\", { children: [_jsx(Text, Object.assign({ type: TextType.Title1 }, { children: \"Customers\" })), isLoading ? _jsx(Spinner, {}) : _jsx(\"div\", Object.assign({ className: styles.customerContent }, { children: customers === null || customers === void 0 ? void 0 : customers.map(customer => (_jsx(\"div\", Object.assign({ className: styles.customerItem }, { children: _jsx(Address, { data: customer }) })))) }))] }) }));\n};\nconst mapStateToProps = (state) => {\n    var _a, _b;\n    return {\n        customers: (_a = state === null || state === void 0 ? void 0 : state.customers) === null || _a === void 0 ? void 0 : _a.customers,\n        isLoading: (_b = state === null || state === void 0 ? void 0 : state.customers) === null || _b === void 0 ? void 0 : _b.loading\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onFetchCustomers: () => dispatch(fetchCustomers()),\n    };\n};\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);\n","import Customers from \"./Customers\";\nexport default Customers;\n","// extracted by mini-css-extract-plugin\nvar _1 = \"UYSO57sqoYUh0xDKm0PA\";\nvar _2 = \"AAICdRAsdpUDQCweaGkK\";\nexport { _1 as \"customerContent\", _2 as \"customerItem\" }\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { firestore } from './firebase';\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nexport const addCustomer = (document) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const docRef = yield addDoc(collection(firestore, \"customers\"), document);\n        return docRef.id;\n    }\n    catch (error) {\n        console.error(\"Error adding document: \", error);\n        throw error;\n    }\n});\nexport const getCustomers = (collectionName) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const querySnapshot = yield getDocs(collection(firestore, collectionName));\n        return querySnapshot.docs.map(doc => {\n            const data = doc.data();\n            const invoice = {\n                id: doc.id,\n                address: data === null || data === void 0 ? void 0 : data.address,\n                email: data === null || data === void 0 ? void 0 : data.email,\n                name: data === null || data === void 0 ? void 0 : data.name,\n                phoneNumber: data === null || data === void 0 ? void 0 : data.phoneNumber\n            };\n            return invoice;\n        });\n    }\n    catch (error) {\n        console.error(\"Error getting documents: \", error);\n        throw error;\n    }\n});\nexport const findCustomers = (name) => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n        const querySnapshot = yield getDocs(collection(firestore, \"customers\"));\n        const customers = querySnapshot.docs.map(doc => {\n            const data = doc.data();\n            const customers = {\n                id: doc.id,\n                address: data === null || data === void 0 ? void 0 : data.address,\n                email: data === null || data === void 0 ? void 0 : data.email,\n                name: data === null || data === void 0 ? void 0 : data.name,\n                phoneNumber: data === null || data === void 0 ? void 0 : data.phoneNumber\n            };\n            return customers;\n        });\n        return customers.filter(c => { var _a, _b; return (_b = (_a = c.name) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(name === null || name === void 0 ? void 0 : name.toLocaleLowerCase()); });\n    }\n    catch (error) {\n        console.error(\"Error getting documents: \", error);\n        throw error;\n    }\n});\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC3v567046sugqPZ7E6oakIMfUWpr3-81I\",\n    authDomain: \"invoicefy-7c184.firebaseapp.com\",\n    projectId: \"invoicefy-7c184\",\n    storageBucket: \"invoicefy-7c184.appspot.com\",\n    messagingSenderId: \"806738455295\",\n    appId: \"1:806738455295:web:485bb4ee52dd469e457aca\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n// Initialize services\nconst auth = getAuth(app);\nconst firestore = getFirestore(app);\nconst storage = getStorage(app);\nexport { auth, firestore, storage };\nexport default app;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { addCustomer, getCustomers } from 'services/customerSerives';\nimport { CUSTOMER_SELECTED, FETCH_CUSTOMERS_FAILURE, FETCH_CUSTOMERS_REQUEST, FETCH_CUSTOMERS_SUCCESS, SAVE_CUSTOMER_FAILURE, SAVE_CUSTOMER_REQUEST, SAVE_CUSTOMER_SUCCESS, UPDATE_SELECTED_CUSTOMER } from \"store/types/actionTypes\";\nconst fetchCustomersRequest = () => ({\n    type: FETCH_CUSTOMERS_REQUEST\n});\nconst fetchCustomersSuccess = (payload) => ({\n    type: FETCH_CUSTOMERS_SUCCESS,\n    payload\n});\nconst fetchCustomersFailure = (payload) => ({\n    type: FETCH_CUSTOMERS_FAILURE,\n    payload\n});\nconst saveCustomerRequest = () => ({\n    type: SAVE_CUSTOMER_REQUEST\n});\nconst saveCustomerSuccess = (payload) => ({\n    type: SAVE_CUSTOMER_SUCCESS,\n    payload\n});\nconst saveCustomerFailure = (payload) => ({\n    type: SAVE_CUSTOMER_FAILURE,\n    payload\n});\nexport const updateSelectedCustomer = (payload) => ({\n    type: UPDATE_SELECTED_CUSTOMER,\n    payload\n});\nexport const selectCustomer = (payload) => ({\n    type: CUSTOMER_SELECTED,\n    payload\n});\nexport const fetchCustomers = () => {\n    // @ts-ignore\n    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {\n        dispatch(fetchCustomersRequest());\n        try {\n            const customers = yield getCustomers(\"customers\");\n            dispatch(fetchCustomersSuccess(customers));\n            return customers;\n        }\n        catch (error) {\n            dispatch(fetchCustomersFailure(error === null || error === void 0 ? void 0 : error.message));\n            return Promise.reject(error);\n        }\n    });\n};\nexport const saveCustomer = (data) => {\n    // @ts-ignore\n    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {\n        dispatch(saveCustomerRequest());\n        try {\n            const savedCustomer = yield addCustomer(data);\n            dispatch(saveCustomerSuccess(data));\n            return savedCustomer;\n        }\n        catch (error) {\n            dispatch(saveCustomerFailure(error === null || error === void 0 ? void 0 : error.message));\n            return Promise.reject(error);\n        }\n    });\n};\n"],"names":["style","data","className","Object","assign","children","Text","type","Title1","marginBottom","name","Body1","email","margin","address","phoneNumber","TextType","TextColor","color","Primary","tagMap","Title2","Title3","Body2","Button1","Button2","Subtitle","SubtitleBold","Caption","CaptionBold","colorMap","Grey","Secondary","Inactive","Inverse","Info","Error","Warning","Tag","resolvedColor","state","_a","_b","customers","isLoading","loading","dispatch","onFetchCustomers","useEffect","Spinner","map","customer","Address","A","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","addCustomer","document","id","error","getCustomers","collectionName","docs","doc","findCustomers","querySnapshot","filter","c","toLocaleLowerCase","includes","app","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","selectCustomer","payload","fetchCustomers","fetchCustomersFailure","message","saveCustomer","savedCustomer","saveCustomerFailure"],"sourceRoot":""}